name: Create Ultimate GFW Merged List

on:
  schedule:
    - cron: '0 8 * * *' # 每天北京时间下午4点运行 (UTC 8点)
  workflow_dispatch:

env:
  # 输出文件配置
  FILENAME: "GFW-Ultimate.list" # 更新文件名以反映其更强的能力
  OUTPUT_DIR: "./Clash/Ruleset"

  # 规则源 URL
  SOURCE_URL_GFWLIST: "https://raw.githubusercontent.com/gfwlist/gfwlist/master/list.txt"
  SOURCE_URL_ACL4SSR: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list"

  # --- 复用你原来的文件头信息 ---
  DESCRIPTION: "# 终极 GFW 规则合并流程 (域名+IP)"
  ILLUSTRATE: "# 该规则集由 GFWList 和 ACL4SSR 合并而来，包含域名与IP，强强联合，确保覆盖面"
  RULES_SOURCE_HEADER: "# 基于以下源项目合并："
  AUTHOR: "# 作者：Reid_Vin_Action"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download, process, merge, and generate ruleset
        run: |
          # 确保脚本在任何命令失败时立即退出
          set -e

          # --- 步骤 1: 下载并处理 GFWList (包含域名和IP) ---
          echo "Processing source 1: GFWList (Domains and IPs)..."
          curl -sL "${{ env.SOURCE_URL_GFWLIST }}" -o gfwlist_raw.txt

          # 1a. 初步清理：移除注释、头部和白名单
          grep -vE '^!|^\[|^@@|^\s*$' gfwlist_raw.txt > gfwlist_cleaned.tmp

          # 1b. 分离IP和域名
          # 简单地用'是否包含点.'来区分IP和域名规则的初始形态
          grep -E '^[0-9]{1,3}\.' gfwlist_cleaned.tmp > gfwlist_ips.tmp
          grep -vE '^[0-9]{1,3}\.' gfwlist_cleaned.tmp > gfwlist_domains.tmp

          # 1c. 格式化IP规则 (使用awk判断IPv4/v6)
          awk '{ if ($0 ~ /:/) { print "IP-CIDR6,"$0",no-resolve" } else { print "IP-CIDR,"$0",no-resolve" } }' gfwlist_ips.tmp > gfwlist_ips_clash.tmp

          # 1d. 格式化域名规则 (复用之前的逻辑)
          cat gfwlist_domains.tmp | \
            sed -E 's#^\|\|##; s#^\|https?://##; s#^https?://##; s#^\.##' | \
            sed -E '/\*/d' | \
            sed -E 's|/.*||' | \
            sed '/^$/d' | \
            sed 's/^/DOMAIN-SUFFIX,/' > gfwlist_domains_clash.tmp

          echo "GFWList processed."

          # --- 步骤 2: 下载并处理 ACL4SSR (包含域名和IP) ---
          echo "Processing source 2: ACL4SSR (Domains and IPs)..."
          curl -sL "${{ env.SOURCE_URL_ACL4SSR }}" -o acl4ssr_raw.txt
          
          # 关键修正：现在我们提取所有DOMAIN和IP-CIDR开头的行
          grep -E '^DOMAIN|^IP-CIDR' acl4ssr_raw.txt > acl4ssr_clash.tmp

          echo "ACL4SSR processed."

          # --- 步骤 3: 合并所有规则并去重 ---
          echo "Merging all rules and deduplicating..."
          
          # 将 GFWList 的域名、IP 和 ACL4SSR 的所有规则全部合并
          {
            cat gfwlist_domains_clash.tmp
            cat gfwlist_ips_clash.tmp
            cat acl4ssr_clash.tmp
          } | sort -u > final_rules.txt

          RULES_COUNT=$(wc -l < final_rules.txt)
          echo "Merge complete. Total unique rules (domains and IPs): $RULES_COUNT"
          
          # --- 准备文件头和元数据 ---
          UPDATE_TIME=$(TZ='Asia/Shanghai' date +"%Y-%m-%d %H:%M:%S")
          
          # --- 生成最终文件 ---
          echo "Generating final output file..."
          mkdir -p ${{ env.OUTPUT_DIR }}
          FINAL_FILE_PATH="${{ env.OUTPUT_DIR }}/${{ env.FILENAME }}"
          
          {
            echo "${{ env.ILLUSTRATE }}"
            echo "${{ env.DESCRIPTION }}"
            echo "${{ env.RULES_SOURCE_HEADER }}"
            echo "# 1. GFWList: ${{ env.SOURCE_URL_GFWLIST }}"
            echo "# 2. ACL4SSR: ${{ env.SOURCE_URL_ACL4SSR }}"
            echo "# 更新时间：$UPDATE_TIME"
            echo "# 规则总数：${RULES_COUNT}条"
            echo "${{ env.AUTHOR }}"
            cat final_rules.txt
          } > "$FINAL_FILE_PATH"

          # --- 清理临时文件 ---
          rm *_raw.txt *_cleaned.tmp *_ips.tmp *_domains.tmp *_clash.tmp final_rules.txt
          echo "Process complete! Final file is at $FINAL_FILE_PATH"

      - name: Push changes
        uses: EndBug/add-and-commit@v9.1.4
        with:
          author_name: Reid_Vin
          author_email: reid_vin@outlook.com
          message: "feat: Create comprehensive GFW ruleset (domains and IPs)"
          add: "${{ env.OUTPUT_DIR }}/${{ env.FILENAME }}"
        env:
          GITHUB_TOKEN: ${{ secrets.COMMON_TOKEN }}
