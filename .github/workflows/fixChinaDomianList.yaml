name: Generate China Domain List Rule

on:
  schedule:
    - cron: '0 7 * * *'
  workflow_dispatch:

env:
  # 输出文件名 (已更新为新项目)
  DOMAIN_FILENAME: "China-Domain.list"
  OUTPUT_DIR: "./Clash/Ruleset"

  # 规则源 URL (已更新为新项目)
  SOURCE_URL: "https://raw.githubusercontent.com/entr0pia/SwitchyOmega-Whitelist/refs/heads/master/white-list.sorl"
  
  # 文件头信息 (已更新)
  ILLUSTRATE: "# 规则基于 entr0pia/SwitchyOmega-Whitelist 项目生成，适配 Clash"
  RULES_SOURCE_HEADER: "# 源项目地址："
  AUTHOR: "# 作者：Reid_Vin_Action"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download and process rules
        run: |
          # 确保脚本在任何命令失败时立即退出
          set -e

          # --- 1. 定义目标路径 ---
          DOMAIN_FILE_PATH="${{ env.OUTPUT_DIR }}/${{ env.DOMAIN_FILENAME }}"

          # --- 2. 下载原始规则文件 ---
          echo "Downloading source file from ${{ env.SOURCE_URL }}..."
          curl -sL "${{ env.SOURCE_URL }}" -o source_raw.sorl

          # --- 3. 使用修正后的 awk 脚本处理规则文件 ---
          echo "Processing rules to generate Clash compatible format..."
          awk '
          {
              # 第一步：修剪行首和行尾的空白字符
              gsub(/^[ \t]+|[ \t]+$/, "", $0)

              # 第二步：保留源文件中的空行，以维持结构
              if ($0 == "") {
                  print ""
                  next
              }

              # 第三步：正确处理注释
              # 如果一行以分号(;)或方括号([)开头，则将其视为注释，在前面加上 # 并输出
              if (match($0, /^[;[]/)) {
                  print "# " $0
                  next
              }

              # 第四步：精确过滤所有类型的IP地址和IP段
              # 此正则表达式可以匹配 1.2.3.4, 1.2.3.*, 10.*.*.* 以及IPv6地址(:)
              if ($0 ~ /:/ || $0 ~ /^([0-9*]{1,3}\.){3}[0-9*]{1,3}/) {
                  next
              }

              # 第五步：处理有效的域名规则
              # 移除域名开头的 *. 和 .
              sub(/^\*\./, "", $0)
              sub(/^\./, "", $0)

              # 第六步：过滤掉处理后仍包含*的无效规则(如 edu.*)或空行
              if ($0 == "" || $0 ~ /\*/) {
                  next
              }
              
              # 第七步：输出为 Clash 接受的格式
              print "DOMAIN-SUFFIX," $0
          }
          ' source_raw.sorl > processed_domains.list

          # --- 4. 准备文件头并生成最终文件 ---
          echo "Generating final output file: ${DOMAIN_FILE_PATH}"
          mkdir -p ${{ env.OUTPUT_DIR }}
          UPDATE_TIME=$(TZ='Asia/Shanghai' date +"%Y-%m-%d %H:%M:%S")
          # 统计有效规则行数 (不包括空行和纯注释)
          DOMAIN_COUNT=$(grep -c "DOMAIN-SUFFIX" < processed_domains.list)

          {
            echo "${{ env.ILLUSTRATE }}"
            echo "${{ env.RULES_SOURCE_HEADER }}"
            echo "# ${{ env.SOURCE_URL }}"
            echo "# 更新时间：$UPDATE_TIME"
            echo "# 规则总数：${DOMAIN_COUNT}条"
            echo "${{ env.AUTHOR }}"
            cat processed_domains.list
          } > "$DOMAIN_FILE_PATH"

          # --- 5. 清理临时文件 ---
          rm source_raw.sorl processed_domains.list
          echo "Process complete!"

      - name: Push changes
        uses: EndBug/add-and-commit@v9.1.4
        with:
          author_name: Reid_Vin
          author_email: reid_vin@outlook.com
          message: "chore: Auto update China-Domain rule"
          add: "${{ env.OUTPUT_DIR }}/${{ env.DOMAIN_FILENAME }}"
        env:
          GITHUB_TOKEN: ${{ secrets.COMMON_TOKEN }}
