name: Generate China Domain List Rule

on:
  schedule:
    - cron: '0 7 * * *'
  workflow_dispatch:

env:
  # 输出文件名 (已更新为新项目)
  DOMAIN_FILENAME: "China-Domain.list"
  OUTPUT_DIR: "./Clash/Ruleset"

  # 规则源 URL (已更新为新项目)
  SOURCE_URL: "https://raw.githubusercontent.com/entr0pia/SwitchyOmega-Whitelist/refs/heads/master/white-list.sorl"
  
  # 文件头信息 (已更新)
  ILLUSTRATE: "# 规则基于 entr0pia/SwitchyOmega-Whitelist 项目生成，适配 Clash"
  RULES_SOURCE_HEADER: "# 源项目地址："
  AUTHOR: "# 作者：Reid_Vin_Action"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download and process rules
        run: |
          # 确保脚本在任何命令失败时立即退出
          set -e

          # --- 1. 定义目标路径 ---
          DOMAIN_FILE_PATH="${{ env.OUTPUT_DIR }}/${{ env.DOMAIN_FILENAME }}"

          # --- 2. 下载原始规则文件 ---
          echo "Downloading source file from ${{ env.SOURCE_URL }}..."
          curl -sL "${{ env.SOURCE_URL }}" -o source_raw.sorl

          # --- 3. 处理规则文件 ---
          # 使用 awk 处理文件：
          # 1. 保留空行。
          # 2. 将 '!' 和 '[' 开头的行转为注释。
          # 3. 删除 IPv4 和 IPv6 地址行。
          # 4. 将域名规则转换为 'DOMAIN-SUFFIX,domain' 格式。
          echo "Processing rules to generate Clash compatible format..."
          awk '
          {
              # 修剪前后空格
              gsub(/^[ \t]+|[ \t]+$/, "", $0)
              
              # 保留空行
              if ($0 == "") {
                  print ""
                  next
              }
              
              # 将 SwitchyOmega 注释符转换为 #
              if (match($0, /^[![]/)) {
                  print "#" $0
                  next
              }
              
              # 跳过 IPv4 和 IPv6 地址 (包含CIDR)
              if ($0 ~ /^([0-9]{1,3}\.){3}[0-9]{1,3}(\/[0-9]{1,2})?$/ || $0 ~ /:/) {
                  next
              }
              
              # 处理域名，移除前缀 *. 和 .
              sub(/^\*\./, "", $0)
              sub(/^\./, "", $0)

              # 只有非空行才输出，防止生成无效规则
              if ($0 != "") {
                  print "DOMAIN-SUFFIX," $0
              }
          }
          ' source_raw.sorl > processed_domains.list

          # --- 4. 准备文件头并生成最终文件 ---
          echo "Generating final output file: ${DOMAIN_FILE_PATH}"
          mkdir -p ${{ env.OUTPUT_DIR }}
          UPDATE_TIME=$(TZ='Asia/Shanghai' date +"%Y-%m-%d %H:%M:%S")
          DOMAIN_COUNT=$(grep -c . < processed_domains.list) # 统计有效规则行数

          {
            echo "${{ env.ILLUSTRATE }}"
            echo "${{ env.RULES_SOURCE_HEADER }}"
            echo "# ${{ env.SOURCE_URL }}"
            echo "# 更新时间：$UPDATE_TIME"
            echo "# 规则总数：${DOMAIN_COUNT}条"
            echo "${{ env.AUTHOR }}"
            echo ""
            cat processed_domains.list
          } > "$DOMAIN_FILE_PATH"

          # --- 5. 清理临时文件 ---
          rm source_raw.sorl processed_domains.list
          echo "Process complete!"

      - name: Push changes
        uses: EndBug/add-and-commit@v9.1.4
        with:
          author_name: Reid_Vin
          author_email: reid_vin@outlook.com
          message: "chore: Auto update Whitelist-Domain rule"
          # 只添加新的域名文件
          add: "${{ env.OUTPUT_DIR }}/${{ env.DOMAIN_FILENAME }}"
        env:
          GITHUB_TOKEN: ${{ secrets.COMMON_TOKEN }}
